#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

# Store the current directory and switch to the project root.
dir=$(pwd)
cd "$(dirname "$0")/.." || exit

trap ctrl_c INT TERM
ctrl_c() {
  echo "*** Returning you to $dir"
  cd "$dir" || exit
  exit 0
}

display_help() {
  echo "Usage: $0 [options...] [EB environment name]" >&2
  echo
  echo "   EB environment name        [optional] the Elastic Beanstalk environment to deploy to. If none is"
  echo "                              specified, the default environment from .elasticbeanstalk/config.yml"
  echo "                              will be used."
  echo "   -h, --help                 show this help text and exit"
}

if [ $# -gt 0 ]; then
  while :
  do
      case "$1" in
        -h | --help)
            display_help
            exit 0
            ;;
        -*)
            echo "Error: Unknown option: $1" >&2
            display_help
            exit 1
            ;;
        *)
            break
            ;;
      esac
  done
fi

if [ $# -gt 0 ] && [ -n "$1" ]; then
  eb_environment_name="$1"
else
  eb_environment_name="$(eb list | grep "\* " | sed -e 's/\* //')"
fi

_ebenv=""
ebenv() {
  if [ -z "$_ebenv" ]; then
    _ebenv="$(eb printenv "$eb_environment_name" | tail -n +2 | sed -e 's/^[ \t]*//' | sed -e 's/ = /=/')"
  fi

  echo "$_ebenv" | grep "$1" | sed -e 's/^.*=//'
}

echo "Deploying to EB environment $eb_environment_name"
npm --prefix=./static install
gulp --gulpfile=./static/gulpfile.js clean
gulp --gulpfile=./static/gulpfile.js build --production
eb deploy "$eb_environment_name"
eb labs cleanup-versions "$eb_environment_name" --num-to-leave=5 --force

s3_bucket="$(ebenv 'S3_BUCKET_NAME')"
settings_module="$(ebenv 'DJANGO_SETTINGS_MODULE')"
DJANGO_SETTINGS_MODULE="$settings_module" S3_BUCKET_NAME="$s3_bucket" ./manage.py collectstatic --no-input

cd "$dir" || exit
exit 0
