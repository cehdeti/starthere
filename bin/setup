#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

if [ "$(id -u)" -eq 0 ]; then
  echo "Don't run me with sudo, please."
  exit 1
fi

# Store the current directory and switch to the project root.
dir=$(pwd)
cd "$(dirname "$0")/.." || exit

trap ctrl_c INT TERM
ctrl_c() {
  echo "*** Returning you to $dir"
  cd "$dir" || exit
  exit 0
}

# <<REMOVE_BEGIN>>
replace_project_meta() {
  printf 'Replacing occurrances of <<PROJECT>> with project name...'
  local dir
  dir="$(basename "$(pwd)")"
  find . -type f ! -path './.git/*' ! -path './bin/*' ! -path './node_modules/*' -print0 | xargs -0 env LC_CTYPE=C LANG=C sed -i '' "s/<<PROJECT>>/$dir/g"
  find . -type f ! -path './.git/*' ! -path './node_modules/*' -print0 | xargs -0 env LC_CTYPE=C LANG=C sed -i '' '/^# <<REMOVE_BEGIN>>$/,/^# <<REMOVE_END>>$/d'
  printf 'done.\n'
}

git_reinit() {
  rm -rf .git
  git init
}

# <<REMOVE_END>>
if ! command -v pipenv >/dev/null 2>&1; then
  echo "Looks like you don't have \`pipenv\` installed. If you're on a Mac, do \`brew install pipenv\` and run this script again."
  exit 0
fi

if ! command -v npm >/dev/null 2>&1; then
  echo "Couldn't find npm. Please install node/npm (https://nodejs.org/en/download/), and run this script again."
  exit 0
fi

# <<REMOVE_BEGIN>>
replace_project_meta
git_reinit
# <<REMOVE_END>>
echo 'Installing requirements...'
pipenv install --dev
npm install

printf 'Initializing database...'
pipenv run python manage.py migrate -v 0
printf 'done.\n'

echo "OK cool. Now let's create your user account."
pipenv run python manage.py createsuperuser

echo "Awesome, you're all set. Run \`pipenv run python manage.py runserver\` to start the app. Happy devving!"

cd "$dir" || exit
exit 0
